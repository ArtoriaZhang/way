import{_ as s,c as a,o as t,a2 as e}from"./chunks/framework.CCoplHXX.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/linux/shell/stringOpt.md","filePath":"docs/linux/shell/stringOpt.md"}'),n={name:"docs/linux/shell/stringOpt.md"},o=e(`<h2 id="length-of-str" tabindex="-1">Length of str <a class="header-anchor" href="#length-of-str" aria-label="Permalink to &quot;Length of str&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STR=&quot;to be or not to be&quot;</span></span>
<span class="line"><span>echo \${#STR} ## outputs: 18</span></span></code></pre></div><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STR=&quot;Hello World&quot;</span></span>
<span class="line"><span>TAR=&quot;or&quot;</span></span>
<span class="line"><span>expr index &quot;$STR&quot; &quot;$TAR&quot;</span></span></code></pre></div><h2 id="substrin" tabindex="-1">Substrin <a class="header-anchor" href="#substrin" aria-label="Permalink to &quot;Substrin&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STRING=&quot;this is a string&quot;</span></span>
<span class="line"><span>POS=1</span></span>
<span class="line"><span>LEN=3</span></span>
<span class="line"><span>echo \${STRING:$POS:$LEN} ## Outputs: &quot;his&quot;</span></span></code></pre></div><h2 id="substring-replacement" tabindex="-1">Substring replacement <a class="header-anchor" href="#substring-replacement" aria-label="Permalink to &quot;Substring replacement&quot;">​</a></h2><ol><li>Replace fire occurence</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STRING=&quot;to be or not to be&quot;</span></span>
<span class="line"><span>echo \${STRING[@]/be/eat} ## Outputs: &quot;to eat or not to be&quot;</span></span></code></pre></div><ol><li>Replace all occurence</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STRING=&quot;to be or not to be&quot;</span></span>
<span class="line"><span>echo \${STRING[@]//be/eat} ## Outputs: &quot;to eat or not to be&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>STRING=&quot;to be or not to be&quot;</span></span>
<span class="line"><span>echo \${STRING[@]// be/} ## Outputs: &quot;to or not to&quot;. Replace with empty.</span></span></code></pre></div><ol><li>Replace occrence if matching.</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>STRING=&quot;to be or not to be&quot;</span></span>
<span class="line"><span>echo \${STRING[@]//#to be/eat} ## Outputs: &quot;eat or not to be&quot;</span></span></code></pre></div>`,13),p=[o];function i(l,c,u,r,h,d){return t(),a("div",null,p)}const q=s(n,[["render",i]]);export{g as __pageData,q as default};
