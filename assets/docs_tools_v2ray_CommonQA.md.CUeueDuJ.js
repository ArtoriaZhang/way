import{_ as e,c as a,o,a2 as t}from"./chunks/framework.CCoplHXX.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/tools/v2ray/CommonQA.md","filePath":"docs/tools/v2ray/CommonQA.md"}'),s={name:"docs/tools/v2ray/CommonQA.md"},i=t('<h2 id="q-a" tabindex="-1">Q&amp;A <a class="header-anchor" href="#q-a" aria-label="Permalink to &quot;Q&amp;A&quot;">​</a></h2><h3 id="invalid-user" tabindex="-1">Invalid user <a class="header-anchor" href="#invalid-user" aria-label="Permalink to &quot;Invalid user&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">invalid user &gt; proxy/vmess: Not Found</p><p>Q: common/drain: common/drain: drained connection &gt; proxy/vmess/encoding: invalid user &gt; proxy/vmess: Not Found <br> A:</p><ol><li>Check UserId</li><li>Check AlteredId</li><li>Check whether the time is synchronized between client and server</li></ol></div><div class="tip custom-block"><p class="custom-block-title">VMessAEAD is enforced and a non VMessAEAD connection is received...</p><p>invalid user: VMessAEAD is enforced and a non VMessAEAD connection is received. You can still disable this security feature with environment variable v2ray.vmess.aead.forced = false . You will not be able to enable legacy header workaround in the future</p><ol><li>Set alterId = 0 on both client and server side;</li><li>set Environment V2RAY_VMESS_AEAD_FORCED=false</li></ol></div><h3 id="not-receive-any-packages" tabindex="-1">Not receive any packages <a class="header-anchor" href="#not-receive-any-packages" aria-label="Permalink to &quot;Not receive any packages&quot;">​</a></h3><div class="tip custom-block"><p class="custom-block-title">listen network interface</p><p>change listen 127.0.0.0 to 0.0.0.0</p></div>',6),n=[i];function r(c,l,d,m,p,h){return o(),a("div",null,n)}const _=e(s,[["render",r]]);export{u as __pageData,_ as default};
