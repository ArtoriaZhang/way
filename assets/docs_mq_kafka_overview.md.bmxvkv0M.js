import{u as e,c as t,o as s,a2 as o}from"./chunks/framework.CCoplHXX.js";const a="/assets/overview.D0Bu_wU2.png",i="/assets/PartitionLessThan.BZ6jYVge.png",r="/assets/PartitionEaqual.whdCToWy.png",n="/assets/PartitionHiger.CakyRuHV.png",h=o('<h1 id="overview-origin" tabindex="-1">overview <a href="https://stackoverflow.com/questions/38024514/understanding-kafka-topics-and-partitions" target="_blank" rel="noreferrer">origin</a> <a class="header-anchor" href="#overview-origin" aria-label="Permalink to &quot;overview [origin](https://stackoverflow.com/questions/38024514/understanding-kafka-topics-and-partitions)&quot;">​</a></h1><h2 id="compoents" tabindex="-1">Compoents <a class="header-anchor" href="#compoents" aria-label="Permalink to &quot;Compoents&quot;">​</a></h2><p><img src="'+a+'" alt="overview"></p><h2 id="questions" tabindex="-1">Questions <a class="header-anchor" href="#questions" aria-label="Permalink to &quot;Questions&quot;">​</a></h2><h3 id="when-a-producer-is-producing-a-message-it-will-specify-the-topic-it-wants-to-send-the-message-to-is-that-right-does-it-care-about-partitions" tabindex="-1">When a producer is producing a message, it will specify the topic it wants to send the message to. Is that right? Does it care about partitions? <a class="header-anchor" href="#when-a-producer-is-producing-a-message-it-will-specify-the-topic-it-wants-to-send-the-message-to-is-that-right-does-it-care-about-partitions" aria-label="Permalink to &quot;When a producer is producing a message, it will specify the topic it wants to send the message to. Is that right? Does it care about partitions?&quot;">​</a></h3><p>The producer will decide target partition to place any message, depending on:</p><ol><li>Partition id, if it&#39;s specified within the message</li><li>key % num partitions, if no partition id is mentioned</li><li>Round robin if neither partition id nor message key is available in the message means only the value is available</li></ol><h3 id="when-a-subscriber-is-running-does-it-specify-its-group-id-so-that-it-can-be-part-of-a-cluster-of-consumers-of-the-same-topic-or-several-topics-that-this-group-of-consumers-is-interested-in" tabindex="-1">When a subscriber is running - Does it specify its group id so that it can be part of a cluster of consumers of the same topic or several topics that this group of consumers is interested in? <a class="header-anchor" href="#when-a-subscriber-is-running-does-it-specify-its-group-id-so-that-it-can-be-part-of-a-cluster-of-consumers-of-the-same-topic-or-several-topics-that-this-group-of-consumers-is-interested-in" aria-label="Permalink to &quot;When a subscriber is running - Does it specify its group id so that it can be part of a cluster of consumers of the same topic or several topics that this group of consumers is interested in?&quot;">​</a></h3><p>You should always configure group.id unless you are using the simple assignment API and you don’t need to store offsets in Kafka. It will not be a part of any group</p><h3 id="does-each-consumer-group-have-a-corresponding-partition-on-the-broker-or-does-each-consumer-have-one" tabindex="-1">Does each consumer group have a corresponding partition on the broker or does each consumer have one? <a class="header-anchor" href="#does-each-consumer-group-have-a-corresponding-partition-on-the-broker-or-does-each-consumer-have-one" aria-label="Permalink to &quot;Does each consumer group have a corresponding partition on the broker or does each consumer have one?&quot;">​</a></h3><p>In one consumer group, each partition will be processed by one consumer only. These are the possible scenarios</p><ul><li>If the number of consumers is <strong>less than</strong> the number of topic partitions, then multiple partitions can be assigned to one of the consumers in the group</li></ul><p><img src="'+i+'" alt="lessThan"></p><ul><li>If the number of consumers is the <strong>same</strong> as the number of topic partitions, then partition and consumer mapping can be like below,</li></ul><p><img src="'+r+'" alt="eaqual"></p><ul><li>If the number of consumers is <strong>higher than</strong> the number of topic partitions, then partition and consumer mapping can be as seen below, Not effective, check Consumer 5</li></ul><p><img src="'+n+'" alt="higher"></p><h3 id="as-the-partitions-created-by-the-broker-therefore-not-a-concern-for-the-consumers" tabindex="-1">As the partitions created by the broker, therefore not a concern for the consumers? <a class="header-anchor" href="#as-the-partitions-created-by-the-broker-therefore-not-a-concern-for-the-consumers" aria-label="Permalink to &quot;As the partitions created by the broker, therefore not a concern for the consumers?&quot;">​</a></h3><p>Consumer should be aware of the number of partitions, as was discussed in question 3.</p><h3 id="since-this-is-a-queue-with-an-offset-for-each-partition-is-it-the-consumer-s-responsibility-to-specify-which-messages-it-wants-to-read-does-it-need-to-save-its-state" tabindex="-1">Since this is a queue with an offset for each partition, is it the consumer&#39;s responsibility to specify which messages it wants to read? Does it need to save its state? <a class="header-anchor" href="#since-this-is-a-queue-with-an-offset-for-each-partition-is-it-the-consumer-s-responsibility-to-specify-which-messages-it-wants-to-read-does-it-need-to-save-its-state" aria-label="Permalink to &quot;Since this is a queue with an offset for each partition, is it the consumer&#39;s responsibility to specify which messages it wants to read? Does it need to save its state?&quot;">​</a></h3><p>Kafka (to be specific <strong>Group Coordinator</strong>) takes care of the offset state by producing a message to an internal <strong>__consumer_offsets</strong> topic, this behavior can be configurable to manual as well by setting enable.auto.commit to false. In that case <strong>consumer.commitSync()</strong> and <strong>consumer.commitAsync()</strong> can help manage offset.</p><p>More about <strong>Group Coordinator</strong>:</p><blockquote><ul><li>It&#39;s one of the elected brokers in the cluster from Kafka server side.</li><li>Consumers interact with the Group Coordinator for offset commits and fetch requests.</li><li>Consumer sends periodic heartbeats to Group Coordinator.</li></ul></blockquote><h3 id="what-happens-when-a-message-is-deleted-from-the-queue-for-example-the-retention-was-for-3-hours-then-the-time-passes-how-is-the-offset-being-handled-on-both-sides" tabindex="-1">What happens when a message is deleted from the queue? - For example, The retention was for 3 hours, then the time passes, how is the offset being handled on both sides? <a class="header-anchor" href="#what-happens-when-a-message-is-deleted-from-the-queue-for-example-the-retention-was-for-3-hours-then-the-time-passes-how-is-the-offset-being-handled-on-both-sides" aria-label="Permalink to &quot;What happens when a message is deleted from the queue? - For example, The retention was for 3 hours, then the time passes, how is the offset being handled on both sides?&quot;">​</a></h3><p>If any consumer starts after the retention period, messages will be consumed as per auto.offset.reset configuration which could be latest/earliest. Technically, it&#39;s latest (start processing new messages), because all the messages got expired by that time and retention is a topic-level configuration.</p>',25),c=[h],f=JSON.parse('{"title":"overview origin","description":"","frontmatter":{},"headers":[],"relativePath":"docs/mq/kafka/overview.md","filePath":"docs/mq/kafka/overview.md"}'),u={name:"docs/mq/kafka/overview.md"},g=Object.assign(u,{setup(p){return e(),(l,d)=>(s(),t("div",null,c))}});export{f as __pageData,g as default};
